name: Roots API CI

on:
  push:
    branches: ['main', 'development']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_DATABASE: roots_test_db
      DB_USER: root
      DB_PASSWORD: root
      APP_ENV: test
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/roots_test_db
      JWT_SECRET: keyForTesting
    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE $DB_DATABASE;' -u$DB_USER -p$DB_PASSWORD

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install npm dependencies
        run: |
          npm ci
      - name: Run unit tests
        run: |
          npm run test
      - name: Run e2e tests
        run: |
          npx prisma generate
          npx prisma migrate deploy
          npm run test:e2e:workflow

      # - name: Update cloud database
      #   env:
      #     DATABASE_URL: ${{ secrets.RAILWAY_DATABASE_URL }}
      #   run: |
      #     npx prisma generate
      #     npx prisma migrate deploy
      #     npx prisma db seed

      # - name: Install Railway
      #   run: npm i -g @railway/cli

      # - name: Deploy
      #   run: railway up
      #   env:
      #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
